# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches:
      - development
      - main
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      description:
        description: describe the build
        required: true

jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.5
          bundler-cache: true
      - name: Install Rubocop
        run: gem install rubocop
      - name: Check code
        run: rubocop
  rspec-test:
    name: RSpec
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:latest
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_user_password
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install dependent libraries
        run: sudo apt-get install libpq-dev
      - name: Install gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: copy files
        run: cp config/github/database.yml config/database.yml
      - name: Setup database
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate
        env:
          RAILS_ENV: test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_user_password

      - name: Run tests
        run: bundle exec rspec spec/
        env:
          RAILS_ENV: test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_user_password
